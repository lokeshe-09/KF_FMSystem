# Generated by Django 4.2.7 on 2025-09-21 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('farms', '0011_notification_created_by_notification_is_farm_wide_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantDiseasePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_data', models.TextField(help_text='Base64 encoded plant image')),
                ('image_filename', models.CharField(blank=True, help_text='Original filename', max_length=255, null=True)),
                ('disease_status', models.CharField(choices=[('healthy', 'Healthy'), ('diseased', 'Diseased'), ('uncertain', 'Uncertain')], help_text='Overall health status', max_length=20)),
                ('diseases_detected', models.JSONField(default=list, help_text='List of diseases detected with details')),
                ('confidence_level', models.CharField(choices=[('high', 'High (>80%)'), ('medium', 'Medium (50-80%)'), ('low', 'Low (<50%)')], help_text='AI confidence level', max_length=10)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='Numerical confidence score (0-100)', max_digits=5, null=True)),
                ('ai_analysis', models.TextField(help_text='Complete AI analysis response')),
                ('remedies_suggested', models.TextField(blank=True, help_text='Recommended treatments and remedies', null=True)),
                ('prevention_tips', models.TextField(blank=True, help_text='Prevention tips for future', null=True)),
                ('analysis_timestamp', models.DateTimeField(auto_now_add=True, help_text='When AI analysis was performed')),
                ('gemini_model_version', models.CharField(default='gemini-2.5-pro', help_text='Gemini AI model used', max_length=50)),
                ('processing_time_ms', models.PositiveIntegerField(blank=True, help_text='Time taken for AI processing', null=True)),
                ('user_notes', models.TextField(blank=True, help_text="User's additional notes", null=True)),
                ('location_in_farm', models.CharField(blank=True, help_text='Specific location where image was taken', max_length=200, null=True)),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether the issue has been resolved')),
                ('actions_taken', models.TextField(blank=True, help_text='Actions taken based on the prediction', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disease_predictions', to='farms.cropstage')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_predictions', to='farms.farm')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-analysis_timestamp', '-created_at'],
                'indexes': [models.Index(fields=['farm', '-analysis_timestamp'], name='farms_plant_farm_id_403c15_idx'), models.Index(fields=['user', '-analysis_timestamp'], name='farms_plant_user_id_abbeb1_idx'), models.Index(fields=['disease_status'], name='farms_plant_disease_3b557b_idx'), models.Index(fields=['confidence_level'], name='farms_plant_confide_ff67b8_idx'), models.Index(fields=['is_resolved'], name='farms_plant_is_reso_9626c3_idx'), models.Index(fields=['-created_at'], name='farms_plant_created_f722e8_idx')],
            },
        ),
    ]
